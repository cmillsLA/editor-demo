{"version":3,"sources":["components/Nav/Nav.js","Elements.js","components/Quill/Quill.js","components/Editor/Editor.js","components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["Logo","styled","Tab","Nav","getActiveTab","props","location","pathname","replace","handleChange","e","path","preventDefault","history","push","AppBar","position","Tabs","onChange","this","value","label","disabled","PureComponent","withRouter","PocContainer","div","PocItem","Grid","PocHTMLOutput","Quill","content","delta","source","editor","console","log","getContents","output","JSON","stringify","setState","state","modules","toolbar","header","script","list","indent","formats","container","spacing","item","theme","EDITOR_JS_TOOLS","embed","Embed","table","Table","paragraph","Paragraph","List","code","Code","linkTool","LinkTool","image","Image","raw","Raw","class","Header","inlineToolbar","quote","Quote","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","Editor","event","json","blocks","data","tools","eventGuid","getDayStr","addDays","today","Date","setDate","getDate","toISOString","CalendarContainer","DialogContent","createEventId","String","INITIAL_EVENTS","id","title","start","type","end","EventDialogContent","EVENT_COLORS","EVENT_CLASSNAME","EventDialog","selectedEvent","onClose","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContentText","allDay","DialogActions","Button","onClick","color","getUIDate","dateStr","date","getMonth","getFullYear","Calendar","formatEventType","extendedProps","backgroundColor","borderColor","addEventClassname","handleEventSelect","formattedSelectedEvent","formatSelectedEvent","handleCloseEvent","plugins","dayGridPlugin","listPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","eventClick","initialEvents","displayEventEnd","eventContent","eventClassNames","AppContainer","App","Container","maxWidth","exact","to","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"ogBAOA,IAAMA,EAAOC,YAAOC,IAAPD,CAAH,KAUJE,E,4MACJC,aAAe,kBAAM,EAAKC,MAAMC,SAASC,SAASC,QAAQ,IAAK,K,EAE/DC,aAAe,SAACC,EAAGC,GACjBD,EAAEE,iBACF,EAAKP,MAAMQ,QAAQC,KAAnB,WAA4BH,K,uDAI5B,OACE,kBAACI,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKV,aAAcW,MAAOD,KAAKf,gBAC7C,kBAACJ,EAAD,CAAMqB,MAAM,yBAAyBC,UAAQ,IAC7C,kBAACpB,EAAA,EAAD,CAAKmB,MAAM,QAAQD,MAAM,UACzB,kBAAClB,EAAA,EAAD,CAAKmB,MAAM,YAAYD,MAAM,cAC7B,kBAAClB,EAAA,EAAD,CAAKmB,MAAM,WAAWD,MAAM,mB,GAfpBG,iBAsBHC,cAAWrB,G,2aCpCnB,IAAMsB,EAAexB,IAAOyB,IAAV,KAQZC,EAAU1B,YAAO2B,IAAP3B,CAAH,KAIP4B,EAAgB5B,IAAOyB,IAAV,KCoFXI,G,yDA1Fb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IA+CRI,aAAe,SAACsB,EAASC,EAAOC,EAAQC,GAKtC,GAJAC,QAAQC,IAAI,iBAAkBL,GAC9BI,QAAQC,IAAI,eAAgBJ,GAC5BG,QAAQC,IAAI,gBAAiBH,GAC7BE,QAAQC,IAAI,gBAAiBF,EAAQA,EAAOG,eACxCJ,GAAUC,EAAQ,CACpB,IAAMI,EAASC,KAAKC,UAAUN,EAAOG,eACrC,EAAKI,SAAS,CACZrB,MAAOW,EACPO,aAvDJ,EAAKI,MAAQ,CACXtB,MAAO,GACPkB,OAAQ,IAGV,EAAKK,QAAU,CACbC,QAAS,CACP,CAAC,CAAEC,OAAQ,CAAC,EAAG,GAAG,KAClB,CACE,OACA,SACA,YACA,SACA,aACA,CAAEC,OAAQ,OACV,CAAEA,OAAQ,UAEZ,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,MACV,SAEF,CAAC,OAAQ,SACT,CAAC,WAIL,EAAKC,QAAU,CACb,SACA,OACA,SACA,YACA,SACA,aACA,SACA,OACA,SACA,SACA,QACA,OACA,SA5Ce,E,qDA8DT,IAAD,EACmB9B,KAAKuB,MAAvBJ,EADD,EACCA,OAAQlB,EADT,EACSA,MAChB,OACE,kBAACK,EAAD,KACE,qCAEA,kBAACG,EAAA,EAAD,CAAMsB,WAAS,EAACC,QAAS,GACvB,kBAACxB,EAAD,CAASyB,MAAI,GACX,sCACA,kBAAC,IAAD,CACEC,MAAM,OACNjC,MAAOA,EACPuB,QAASxB,KAAKwB,QACdM,QAAS9B,KAAK8B,QACd/B,SAAUC,KAAKV,gBAInB,kBAACkB,EAAD,CAASyB,MAAI,GACX,2CACA,kBAACvB,EAAD,KAAgBS,U,GAnFRf,kB,mRCaP+B,GAAkB,CAC7BC,MAAOC,IACPC,MAAOC,IACPC,UAAWC,IACXb,KAAMc,IACNC,KAAMC,IACNC,SAAUC,IACVC,MAAOC,IACPC,IAAKC,IACLxB,OAAQ,CACNyB,MAAOC,IACPC,eAAe,GAEjBC,MAAOC,KACPC,OAAQC,KACRC,UAAWC,KACXC,UAAWC,KACXC,WAAYC,MAgDCC,G,kDA5Cb,WAAY9E,GAAQ,IAAD,8BACjB,cAAMA,IAORI,aAAe,SAAC2E,EAAOC,GAGrB,GAFAlD,QAAQC,IAAI,eAAgBgD,GAC5BjD,QAAQC,IAAI,cAAeiD,GACvBA,GAAQA,EAAKC,OAAQ,CACvB,IAAMhD,EAASC,KAAKC,UAAU6C,EAAKC,QACnC,EAAK7C,SAAS,CAAEH,aAXlB,EAAKI,MAAQ,CACXtB,MAAO,GACPkB,OAAQ,IAJO,E,qDAiBT,IAAD,EACmBnB,KAAKuB,MAAvBtB,EADD,EACCA,MAAOkB,EADR,EACQA,OACf,OACE,kBAACb,EAAD,KACE,yCAEA,kBAACG,EAAA,EAAD,CAAMsB,WAAS,EAACC,QAAS,GACvB,kBAACxB,EAAD,CAASyB,MAAI,GACX,sCACA,kBAAC,IAAD,CACEmC,KAAMnE,EACNoE,MAAOlC,GACPpC,SAAUC,KAAKV,eALnB,KAUA,kBAACkB,EAAD,CAASyB,MAAI,GACX,2CACA,kBAACvB,EAAD,KAAgBS,U,GArCPf,iB,2XCxBrB,IAAIkE,GAAY,EAIVC,GAAY,SAAAC,GAChB,IAAIC,EAAQ,IAAIC,KAIhB,OAHIF,IACFC,EAAQ,IAAIC,KAAKD,EAAME,QAAQF,EAAMG,UAAYJ,KAEjCC,EAPYI,cAAcxF,QAAQ,OAAQ,KAUxDyF,GAAoBhG,YAAOiG,KAAPjG,CAAH,MAKjBkG,GAAgB,kBAAMC,OAAOX,OAEtBY,GAAiB,CAC5B,CACEC,GAAIH,KACJI,MAAO,kBACPC,MAAOd,KACPe,KAAM,eAER,CACEH,GAAIH,KACJI,MAAO,iBACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,gBACPC,MAAOd,GAAU,GACjBe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,cACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,kBACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,mCACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,mCACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,mBAER,CACEH,GAAIH,KACJI,MAAO,mCACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,eAER,CACEH,GAAIH,KACJI,MAAO,mCACPC,MAAM,GAAD,OAAKd,GAAU,GAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,GAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,eACPC,MAAM,GAAD,OAAKd,GAAU,IAAf,aACLgB,IAAI,GAAD,OAAKhB,GAAU,IAAf,aACHe,KAAM,SAER,CACEH,GAAIH,KACJI,MAAO,gBACPC,MAAOd,GAAU,IACjBe,KAAM,UAIJE,GAAqB1G,IAAOyB,IAAV,MASlBkF,GAAe,CACnBxB,MAAO,GACP,cAAe,UACf,kBAAmB,WAGfyB,GAAkB,CACtBzB,MAAO,OACP,cAAe,SACf,kBAAmB,UAGf0B,GAAc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAIpC,OAHA7E,QAAQC,IAAI,qBAAsB2E,GAClC5E,QAAQC,IAAI,0BAA2B2E,EAAcP,OAGnD,kBAACS,GAAA,EAAD,CACEC,MAAM,EACNF,QAASA,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaf,GAAG,sBAAsBS,EAAcR,OACpD,kBAACI,GAAD,KACE,kBAACW,GAAA,EAAD,CAAmBhB,GAAG,4BAClBS,EAAcQ,OAKd,8CAAoBR,EAAcP,OAJlC,2BACGO,EAAcP,MADjB,MAC2BO,EAAcL,OAO/C,kBAACc,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,QAASV,EAASW,MAAM,WAAhC,YAQFC,GAAY,SAAAC,GAChB,GAAIA,EAAS,CACX,IAAMC,EAAO,IAAIjC,KAAKgC,GACtB,MAAM,GAAN,OAAUC,EAAKC,WAAa,EAA5B,YAAiCD,EAAK/B,UAAtC,YAAmD+B,EAAKE,eAE1D,MAAO,IA+EMC,G,kDAlEb,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAMR6H,gBAAkB,SAAAxH,GAAM,IACd+F,EAAS/F,EAAE0E,MAAM+C,cAAjB1B,KACR/F,EAAE0H,gBAAkBxB,GAAaH,GACjC/F,EAAE2H,YAAczB,GAAaH,IAVZ,EAanB6B,kBAAoB,SAAA5H,GAAC,MAAI,CAACmG,GAAgBnG,EAAE0E,MAAM+C,cAAc1B,QAb7C,EAenB8B,kBAAoB,SAAAxB,GAClB,IAAMyB,EA1BkB,SAAC,GAAmC,IAAjCjC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,IAAKa,EAAa,EAAbA,OAChD,MAAO,CACLhB,QACAC,MAAOoB,GAAUpB,GACjBE,IAAKkB,GAAUlB,GACfa,UAqB+BkB,CAAoB1B,EAAc3B,OACjE,EAAK3C,SAAS,CAAEsE,cAAeyB,KAjBd,EAoBnBE,iBAAmB,WACjB,EAAKjG,SAAS,CACZsE,cAAe,QApBjB,EAAKrE,MAAQ,CACXqE,cAAe,MAHA,E,qDA2BjB,OACE,kBAACtF,EAAD,KACE,kBAACwE,GAAD,KACE,wCACA,kBAAC,KAAD,CACE0C,QAAS,CACPC,KACAC,KACAC,KACAC,MAEFC,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,yCAETC,YAAY,eACZC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,WAAYtI,KAAKoH,kBACjBmB,cAAerD,GACfsD,iBAAiB,EACjBC,aAAczI,KAAK+G,gBACnB2B,gBAAiB1I,KAAKmH,qBAGzBnH,KAAKuB,MAAMqE,eACV,kBAAC,GAAD,CACEA,cAAe5F,KAAKuB,MAAMqE,cAC1BC,QAAS7F,KAAKuH,wB,GA3DHnH,iB,0ICxKvB,IAAMuI,GAAe7J,IAAOyB,IAAV,MAgCHqI,OA1Bf,WACE,OACE,kBAAC,IAAD,KACE,kBAACD,GAAD,KACE,kBAAC,EAAD,MACA,kBAACE,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOtJ,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOuJ,OAAK,EAACvJ,KAAK,KAChB,kBAAC,IAAD,CAAUwJ,GAAG,iBC1BPC,QACW,cAA7BC,OAAO/J,SAASgK,UAEe,UAA7BD,OAAO/J,SAASgK,UAEhBD,OAAO/J,SAASgK,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjJ,QAAQiJ,MAAMA,EAAMC,c","file":"static/js/main.4e0c4006.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst Logo = styled(Tab)`\n  opacity: 1;\n\n  .MuiTab-wrapper {\n    color: white !important;\n    font-weight: bold;\n    font-size: 1.1em;\n  }\n`;\n\nclass Nav extends PureComponent {\n  getActiveTab = () => this.props.location.pathname.replace('/', '');\n\n  handleChange = (e, path) => {\n    e.preventDefault();\n    this.props.history.push(`/${path}`);\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\">\n        <Tabs onChange={this.handleChange} value={this.getActiveTab()}>\n          <Logo label=\"Broadcaster Editor POC\" disabled />\n          <Tab label=\"quill\" value=\"quill\" />\n          <Tab label=\"editor js\" value=\"editor-js\" />\n          <Tab label=\"calendar\" value=\"calendar\" />\n        </Tabs>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(Nav);\n","import Grid from '@material-ui/core/Grid/index';\nimport styled from 'styled-components';\n\nexport const PocContainer = styled.div`\n  margin-top: 50px;\n\n  .ql-editor {\n    height: 400px;\n  }\n`;\n\nexport const PocItem = styled(Grid)`\n  width: 50%;\n`;\n\nexport const PocHTMLOutput = styled.div`\n  word-wrap: break-word;\n  border: 1px solid #ccc;\n  height: 440px;\n  overflow: auto;\n`;\n","import React, { PureComponent } from 'react';\nimport ReactQuill from 'react-quill';\nimport Grid from '@material-ui/core/Grid';\n\nimport { PocContainer, PocItem, PocHTMLOutput } from '../../Elements';\n\nimport 'react-quill/dist/quill.snow.css';\n\nclass Quill extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      output: '',\n    };\n\n    this.modules = {\n      toolbar: [\n        [{ header: [1, 2, false] }],\n        [\n          'bold',\n          'italic',\n          'underline',\n          'strike',\n          'blockquote',\n          { script: 'sub' },\n          { script: 'super' },\n        ],\n        [\n          { list: 'ordered' },\n          { list: 'bullet' },\n          { indent: '-1' },\n          { indent: '+1' },\n          'align',\n        ],\n        ['link', 'image'],\n        ['clean'],\n      ],\n    };\n\n    this.formats = [\n      'header',\n      'bold',\n      'italic',\n      'underline',\n      'strike',\n      'blockquote',\n      'script',\n      'list',\n      'bullet',\n      'indent',\n      'align',\n      'link',\n      'image',\n    ];\n  }\n\n  handleChange = (content, delta, source, editor) => {\n    console.log('[POC]: content', content);\n    console.log('[POC]: delta', delta);\n    console.log('[POC]: source', source);\n    console.log('[POC]: editor', editor, editor.getContents());\n    if (source && editor) {\n      const output = JSON.stringify(editor.getContents());\n      this.setState({\n        value: content,\n        output,\n      });\n    }\n  };\n\n  render() {\n    const { output, value } = this.state;\n    return (\n      <PocContainer>\n        <h1>Quill</h1>\n\n        <Grid container spacing={2}>\n          <PocItem item>\n            <h2>Editor</h2>\n            <ReactQuill\n              theme=\"snow\"\n              value={value}\n              modules={this.modules}\n              formats={this.formats}\n              onChange={this.handleChange}\n            />\n          </PocItem>\n\n          <PocItem item>\n            <h2>JSON output</h2>\n            <PocHTMLOutput>{output}</PocHTMLOutput>\n          </PocItem>\n        </Grid>\n      </PocContainer>\n    );\n  }\n}\n\nexport default Quill;\n","import React, { PureComponent } from 'react';\nimport EditorJs from 'react-editor-js';\nimport Grid from '@material-ui/core/Grid';\n\nimport Embed from '@editorjs/embed';\nimport Table from '@editorjs/table';\nimport Paragraph from '@editorjs/paragraph';\nimport List from '@editorjs/list';\nimport Code from '@editorjs/code';\nimport LinkTool from '@editorjs/link';\nimport Image from '@editorjs/image';\nimport Raw from '@editorjs/raw';\nimport Header from '@editorjs/header';\nimport Quote from '@editorjs/quote';\nimport Marker from '@editorjs/marker';\nimport CheckList from '@editorjs/checklist';\nimport Delimiter from '@editorjs/delimiter';\nimport InlineCode from '@editorjs/inline-code';\n\nimport { PocContainer, PocItem, PocHTMLOutput } from '../../Elements';\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  paragraph: Paragraph,\n  list: List,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: {\n    class: Header,\n    inlineToolbar: true,\n  },\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n};\n\nclass Editor extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: {},\n      output: '',\n    };\n  }\n\n  handleChange = (event, json) => {\n    console.log('[POC]: event', event);\n    console.log('[POC]: json', json);\n    if (json && json.blocks) {\n      const output = JSON.stringify(json.blocks);\n      this.setState({ output });\n    }\n  };\n\n  render() {\n    const { value, output } = this.state;\n    return (\n      <PocContainer>\n        <h1>Editor.js</h1>\n\n        <Grid container spacing={2}>\n          <PocItem item>\n            <h2>Editor</h2>\n            <EditorJs\n              data={value}\n              tools={EDITOR_JS_TOOLS}\n              onChange={this.handleChange}\n            />\n            ;\n          </PocItem>\n\n          <PocItem item>\n            <h2>JSON output</h2>\n            <PocHTMLOutput>{output}</PocHTMLOutput>\n          </PocItem>\n        </Grid>\n      </PocContainer>\n    );\n  }\n}\n\nexport default Editor;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nimport { PocContainer } from '../../Elements';\n\nlet eventGuid = 0;\n\nconst getDateISO = date => date.toISOString().replace(/T.*$/, '');\n\nconst getDayStr = addDays => {\n  let today = new Date();\n  if (addDays) {\n    today = new Date(today.setDate(today.getDate() + addDays));\n  }\n  return getDateISO(today);\n};\n\nconst CalendarContainer = styled(DialogContent)`\n  width: 90%;\n  margin: 0 5% 5%;\n`;\n\nconst createEventId = () => String(eventGuid++);\n\nexport const INITIAL_EVENTS = [\n  {\n    id: createEventId(),\n    title: 'Eugenes Spa Day',\n    start: getDayStr(),\n    type: 'other-event',\n  },\n  {\n    id: createEventId(),\n    title: '2 hour meeting',\n    start: `${getDayStr(1)}T12:00:00`,\n    end: `${getDayStr(1)}T14:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: getDayStr(2),\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'Timed event',\n    start: `${getDayStr(6)}T18:00:00`,\n    end: `${getDayStr(6)}T22:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'Two Day meeting',\n    start: `${getDayStr(8)}T18:00:00`,\n    end: `${getDayStr(9)}T22:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'Two Day meeting at the same time',\n    start: `${getDayStr(8)}T18:00:00`,\n    end: `${getDayStr(9)}T22:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'Two Day meeting at the same time',\n    start: `${getDayStr(8)}T18:00:00`,\n    end: `${getDayStr(9)}T22:00:00`,\n    type: 'important-event',\n  },\n  {\n    id: createEventId(),\n    title: 'Two Day meeting at the same time',\n    start: `${getDayStr(8)}T18:00:00`,\n    end: `${getDayStr(9)}T22:00:00`,\n    type: 'other-event',\n  },\n  {\n    id: createEventId(),\n    title: 'Two Day meeting at the same time',\n    start: `${getDayStr(8)}T18:00:00`,\n    end: `${getDayStr(9)}T22:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'Long Meeting',\n    start: `${getDayStr(44)}T12:00:00`,\n    end: `${getDayStr(44)}T16:00:00`,\n    type: 'event',\n  },\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: getDayStr(45),\n    type: 'event',\n  },\n];\n\nconst EventDialogContent = styled.div`\n  width: 450px;\n  padding: 20px;\n\n  @media (max-width: 400) {\n    width: 100%;\n  }\n`;\n\nconst EVENT_COLORS = {\n  event: '',\n  'other-event': '#5bb75b',\n  'important-event': '#FF9F33',\n};\n\nconst EVENT_CLASSNAME = {\n  event: 'icon',\n  'other-event': 'icon-2',\n  'important-event': 'icon-3',\n};\n\nconst EventDialog = ({ selectedEvent, onClose }) => {\n  console.log('*** selected event', selectedEvent);\n  console.log('*** typeof start', typeof selectedEvent.start);\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{selectedEvent.title}</DialogTitle>\n      <EventDialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {!selectedEvent.allDay ? (\n            <p>\n              {selectedEvent.start} - {selectedEvent.end}\n            </p>\n          ) : (\n            <p>All Day Event - {selectedEvent.start}</p>\n          )}\n        </DialogContentText>\n      </EventDialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst getUIDate = dateStr => {\n  if (dateStr) {\n    const date = new Date(dateStr);\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n  }\n  return '';\n};\n\nconst formatSelectedEvent = ({ title, start, end, allDay }) => {\n  return {\n    title,\n    start: getUIDate(start),\n    end: getUIDate(end),\n    allDay,\n  };\n};\n\nclass Calendar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedEvent: null,\n    };\n  }\n\n  formatEventType = e => {\n    const { type } = e.event.extendedProps;\n    e.backgroundColor = EVENT_COLORS[type];\n    e.borderColor = EVENT_COLORS[type];\n  };\n\n  addEventClassname = e => [EVENT_CLASSNAME[e.event.extendedProps.type]];\n\n  handleEventSelect = selectedEvent => {\n    const formattedSelectedEvent = formatSelectedEvent(selectedEvent.event);\n    this.setState({ selectedEvent: formattedSelectedEvent });\n  };\n\n  handleCloseEvent = () => {\n    this.setState({\n      selectedEvent: null,\n    });\n  };\n\n  render() {\n    return (\n      <PocContainer>\n        <CalendarContainer>\n          <h1>Calendar</h1>\n          <FullCalendar\n            plugins={[\n              dayGridPlugin,\n              listPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n            ]}\n            headerToolbar={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay',\n            }}\n            initialView=\"dayGridMonth\"\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            eventClick={this.handleEventSelect}\n            initialEvents={INITIAL_EVENTS}\n            displayEventEnd={true}\n            eventContent={this.formatEventType}\n            eventClassNames={this.addEventClassname}\n          />\n        </CalendarContainer>\n        {this.state.selectedEvent && (\n          <EventDialog\n            selectedEvent={this.state.selectedEvent}\n            onClose={this.handleCloseEvent}\n          />\n        )}\n      </PocContainer>\n    );\n  }\n}\n\nexport default Calendar;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport Container from '@material-ui/core/Container';\n\nimport Nav from './components/Nav/Nav';\nimport Quill from './components/Quill/Quill';\nimport Editor from './components/Editor/Editor';\nimport Calendar from './components/Calendar/Calendar';\n\nconst AppContainer = styled.div`\n  .MuiTab-textColorInherit.Mui-disabled {\n    opacity: 1;\n  }\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <AppContainer>\n        <Nav />\n        <Container maxWidth=\"lg\">\n          <Switch>\n            <Route path=\"/calendar\">\n              <Calendar />\n            </Route>\n            <Route path=\"/quill\">\n              <Quill />\n            </Route>\n            <Route path=\"/editor-js\">\n              <Editor />\n            </Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/quill\" />\n            </Route>\n          </Switch>\n        </Container>\n      </AppContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}